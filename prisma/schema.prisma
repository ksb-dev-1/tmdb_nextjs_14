// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("verifiedAt")
  image         String?
  password      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts  Account[]
  sessions  Session[]
  watchlist Watchlist[]
  // movies    Movie[]
  // shows     TvShow[]
}

model Account {
  id                       String  @id @default(auto()) @map("_id") @db.ObjectId
  userId                   String  @db.ObjectId
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String? @db.String
  access_token             String? @db.String
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String? @db.String
  session_state            String?
  refresh_token_expires_in Int?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime @map("expiresAt")
  user         User     @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime @map("expiresAt")

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Watchlist {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  cardId    String
  mediaType String
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String @db.ObjectId
}

// model Movie {
//   id        String @id @default(auto()) @map("_id") @db.ObjectId
//   cardId    String
//   mediaType String
//   user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId    String @db.ObjectId
// }

// model TvShow {
//   id        String @id @default(auto()) @map("_id") @db.ObjectId
//   cardId    String
//   mediaType String
//   user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId    String @db.ObjectId
// }
